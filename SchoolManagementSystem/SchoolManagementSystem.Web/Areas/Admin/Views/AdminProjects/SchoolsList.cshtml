@using Microsoft.AspNetCore.Mvc.TagHelpers
@model X.PagedList.IPagedList<SchoolsAdminViewModel>

@{
    ViewData["Title"] = "All Schools - Project";
}

<h1>Schools</h1>

<!-- Search Form -->
<form method="get" class="mb-3">
    <div class="input-group">
        <input type="text" class="form-control" name="searchTerm" value="@Context.Request.Query["searchTerm"]" placeholder="Search by name or address" />
        <button class="btn btn-primary" type="submit">Search</button>
    </div>
</form>

<!-- Schools Table -->
<table class="table table-striped">
    <thead>
    <tr>
        <th>Name</th>
        <th>Address</th>
        <th>Number of Classes</th>
        <th>Action</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var school in Model)
    {
        <tr>
            <td>@school.SchoolName</td>
            <td>@school.Address</td>
            <td>@school.Classes</td>
            <td>
                <a asp-action="ProjectsList" asp-controller="AdminProjects" asp-route-schoolId="@school.SchoolId" class="btn btn-primary">Manage Projects</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<!-- Pagination Controls -->
<div class="mt-3">
    <ul class="pagination">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" href="?page=@(Model.PageNumber - 1)&searchTerm=@Context.Request.Query["searchTerm"]">Previous</a>
        </li>
        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                <a class="page-link" href="?page=@i&searchTerm=@Context.Request.Query["searchTerm"]">@i</a>
            </li>
        }
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" href="?page=@(Model.PageNumber + 1)&searchTerm=@Context.Request.Query["searchTerm"]">Next</a>
        </li>
    </ul>
</div>